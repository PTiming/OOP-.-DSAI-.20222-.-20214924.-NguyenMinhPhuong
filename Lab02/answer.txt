5
public class Aims {
    public static void main(String[] agrs) {
        }
}
6
public class DigitalVideoDisc {
    private String title;
    private String category;
    private String director;
    private int length;
    private float cost;
    
}
7
  public String getTitle() {
      return title;
  }
  public float getCost() {
      return cost;
  }
  public int getLength() {
      return length;
  }
  public String getCategory() {
      return category;
  }
  public String getDirector() {
      return director;
  }
8
    public DigitalVideoDisc(String title) {
        this.title = title;
    }
    public DigitalVideoDisc(String title, String category, float cost) {
        this.title = title;
        this.category = category;
        this.cost = cost;
    }
    public DigitalVideoDisc(String title, String category, String director, float cost) {
        this.title = title;
        this.category = category;
        this.director = director;
        this.cost = cost;
    }
    public DigitalVideoDisc(String title, String category, String director, int length, float cost) {
        this.title = title;
        this.category = category;
        this.director = director;
        this.length = length;
        this.cost = cost;
    }
    

9
public class Cart {
    public static final int MAX_NUMBERS_ORDERED = 20;
    private static DigitalVideoDisc itemsOrdered[] = new DigitalVideoDisc[MAX_NUMBERS_ORDERED];
    private static int qtyOrders = 0; 

    public void addDigitalVideoDisc(DigitalVideoDisc disc) {
        if (qtyOrders == 20){
            System.out.println("The cart is full.");
        }
        else {
            itemsOrdered[qtyOrders] = disc;
            qtyOrders += 1;
            System.out.println("The item has been added.");

        }
    }
    public void removeDigitalVideoDisc(DigitalVideoDisc disc) {
        if (qtyOrders != 0){
            int i = 0;
            while (i<qtyOrders){
                if (itemsOrdered[i].getTitle() == disc.getTitle()){
                    break;
                }
                else{
                    i+=1;
                }
            }
            if (i==qtyOrders-1){
                itemsOrdered[qtyOrders-1] = null;
                qtyOrders -= 1;
                System.out.println("An item has been removed.");
            }
            else{
                for (int k=i;k<qtyOrders-1;k++){
                    itemsOrdered[k] = itemsOrdered[k+1];
                }
                itemsOrdered[qtyOrders-1] = null;
                qtyOrders -= 1;
                System.out.println("An item has been removed.");
            }
        }
        else{
            System.out.println("No item.");
        }
    }
    public float totalCost() {
        float cos = 0;
        for(int i=0;i<qtyOrders;i++){
            cos += itemsOrdered[i].getCost();
        }
        return cos;
    }
}

10
public class Aims {
    public static void main(String[] agrs) {
        Cart anOrder = new Cart();
        DigitalVideoDisc disc1 = new DigitalVideoDisc("The Lion King", "Animation", "Roger Allers", 87,19.95f);
        anOrder.addDigitalVideoDisc(disc1);
        DigitalVideoDisc disc2 = new DigitalVideoDisc("Star wars", "Science Fiction", "George Lucas", 87,24.95f);
        anOrder.addDigitalVideoDisc(disc2);
        DigitalVideoDisc disc3 = new DigitalVideoDisc("Aladin", "Animation",18.99f);
        anOrder.addDigitalVideoDisc(disc3);

        System.out.println("Total cost is:" + anOrder.totalCost());
    }
}
11
public class Aims {
    public static void main(String[] agrs) {
        Cart anOrder = new Cart();
        DigitalVideoDisc disc1 = new DigitalVideoDisc("The Lion King", "Animation", "Roger Allers", 87,19.95f);
        anOrder.addDigitalVideoDisc(disc1);
        DigitalVideoDisc disc2 = new DigitalVideoDisc("Star wars", "Science Fiction", "George Lucas", 87,24.95f);
        anOrder.addDigitalVideoDisc(disc2);
        DigitalVideoDisc disc3 = new DigitalVideoDisc("Aladin", "Animation",18.99f);
        anOrder.addDigitalVideoDisc(disc3);

        anOrder.removeDigitalVideoDisc(disc3);
        System.out.println("Total cost is:" + anOrder.totalCost());
    }
}
